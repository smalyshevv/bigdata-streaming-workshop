services:
  jobmanager:
    build:
      context: ./flink_part
      dockerfile: ./Dockerfile
    volumes:
      - .:/opt/pyflink
    hostname: "jobmanager"
    container_name: jobmanager
    expose:
      - "6123"
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
  taskmanager1:
    build:
      context: ./flink_part
      dockerfile: ./Dockerfile
    volumes:
      - .:/opt/pyflink
    expose:
      - "6121"
      - "6122"
    depends_on:
      - jobmanager
    command: taskmanager
    container_name: taskmanager1
    links:
      - jobmanager:jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
  taskmanager2:
    build:
      context: ./flink_part
      dockerfile: ./Dockerfile
    volumes:
      - .:/opt/pyflink
    expose:
      - "6121"
      - "6122"
    depends_on:
      - jobmanager
    command: taskmanager
    container_name: taskmanager2
    links:
      - jobmanager:jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "2181:2181"
    container_name: zookeeper
  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    ports:
      - 29092:29092
    depends_on:
      - zookeeper
    container_name: kafka
    environment:
#      HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
  redis:
    image: redis:6.2
    container_name: redis
    ports:
      - "6379:6379"
    command: [ "redis-server", "--save", "", "--appendonly", "no" ]
networks:
  app_network:
    driver: bridge

